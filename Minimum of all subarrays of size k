C++ Code:
Method 1:Brute Force
#include<iostream>
#include<vector>
using namespace std;
int main()
{
    int n,k;
    cin>>n>>k;
    vector<int>v(n);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    for(int i=0;i<=n-k;i++)
    {
        int min_ele=v[i];
        for(int j=i;j<i+k;j++)
        {
            min_ele=min(min_ele,v[j]);
        }
        cout<<min_ele<<" ";
    }
}

Method 2:Using sliding window and Deque
#include<iostream>
#include<vector>
#include<deque>
using namespace std;
int main()
{
    int n,k;
    cin>>n>>k;
    vector<int>v(n);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    deque<int>dq;
    for(int i=0;i<n;i++)
    {
        if(!dq.empty() && dq.front()<=i-k)
        {
            dq.pop_front();
        }
        while(!dq.empty() && dq.back()>v[i])
        {
            dq.pop_back();
        }
        dq.push_back(i);
        if(i>=k-1)
        {
            if(!dq.empty())
            {
                cout<<v[dq.front()]<<" ";
            }
        }
    }
}

Input:
8 3
1 3 -1 -3 5 3 6 7

Output:
-1 -3 -3 -3 3 3 
