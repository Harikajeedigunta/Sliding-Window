C++ Code:
Method 1:Brute Force
#include<iostream>
#include<vector>
using namespace std;
int main()
{
    int n,k;
    cin>>n>>k;
    vector<int>v(n);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    for(int i=0;i<=n-k;i++)
    {
        bool found=false;
        for(int j=i;j<i+k;j++)
        {
            if(v[j]>0)
            {
                cout<<v[j]<<" ";
                found=true;
                break;
            }
        }
        if(!found)
        {
            cout<<"0"<<" ";
        }
    }
}

Method 2:Using sliding window and queue
#include<iostream>
#include<vector>
#include<queue>
using namespace std;
int main()
{
    int n,k;
    cin>>n>>k;
    vector<int>v(n);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    queue<int>q;
    for(int i=0;i<n;i++)
    {
        if(v[i]>0)
        {
            q.push(i);
        }
        if(!q.empty() && q.front()<=i-k)
        {
            q.pop();
        }
        if(i>=k-1)
        {
            if(!q.empty())
            {
                cout<<v[q.front()]<<" ";
            }
            else 
            {
                cout<<"0"<<" ";
            }
        }
    }
}

Input:
7 3
-2 -3 4 -1 -2 1 5

Output:
4 4 4 1 1 
